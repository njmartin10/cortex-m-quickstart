target_path="target/thumbv7m-none-eabi/debug/examples/"
container_name = "qemu_container"
monitor_port="1111"
serial_port="2222"
gdb_port="3333"
machines=["stm32-p103", "stm32-f103c8", "lm3s6965evb"]
machine=machines[2]

desc "Build an example"
task :build, [:example] do |t, args|
    system("cargo build --example #{args[:example]}")
end

desc "Run example with QEMU"
task :qemu, [:example] => :build do |t, args|
    system("qemu-system-arm -cpu cortex-m3 -machine #{machine} -nographic -semihosting-config enable=on,target=native -gdb tcp::#{gdb_port} -S -kernel #{target_path + args[:example]}")
end

desc "Build and run with QEMU on docker"
task :qemu_docker do
    puts "Work in progress. Come back later."
    # Need to make Dockerfile, see stm32 for example
    # docker_cmd = "docker run -it --name=#{container_name} --rm qemu_rust /usr/local/bin/qemu-system-arm -M #{machine} -monitor tcp::1111,server,nowait -serial tcp::2222,server,nowait -gdb tcp::3333,server,nowait -S -kernel /stm32_p103_demos/demos/"
end 

desc "Debug remote target"
task :gdb, [:example] do |t, args|
    system("arm-none-eabi-gdb #{target_path + args[:example]} -q -x openocd.gdb")
end

desc "Open 2 windows, 1 with QEMU, 1 with GDB"
task :all, [:demo_name] do |t, args| 
    system("osascript -e 'tell application \"Terminal\" to do script \"cd #{`pwd`} rake qemu[#{args[:demo_name]}]\"'")
    system("sleep 0.5")
    system("osascript -e 'tell application \"Terminal\" to do script \"cd #{`pwd`} rake gdb[#{args[:demo_name]}]\"'")
end

desc "Help!"
task :help do
    puts "\nFind the list of tasks to perform with `$ rake -T`, such as this help!"
    puts "Examples are located in folder examples:\n#{`ls examples`}"
end

task :default => :help
